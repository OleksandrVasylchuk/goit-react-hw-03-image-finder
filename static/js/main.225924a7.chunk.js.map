{"version":3,"sources":["component/Searchbar/Searchbar.styled.js","component/Searchbar/Searchbar.jsx","component/ImageGalleryItem/ImageGalleryItem.styled.js","component/ImageGalleryItem/ImageGalleryItem.jsx","component/ImageGallery/ImageGallery.styled.js","component/ImageGallery/ImageGallery.jsx","service/pixabay-api.js","component/Button/ButtonLoad.styled.js","component/Button/Button.jsx","component/Modal/Modal.styled.js","component/Modal/Modal.jsx","component/ImageGalleryInfo/ImageGalleryInfo.jsx","component/Container/Container.styled.js","component/Container/Container.jsx","component/App/App.jsx","index.js"],"names":["SearchBar","styled","header","SearchForm","form","SearchFormButton","button","SearchFormLabel","span","SearchFormInput","input","Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","this","type","name","placeholder","autoComplete","autoFocus","onChange","Component","Item","li","Image","img","ImageGalleryItem","src","largeImageURL","tags","onSetImgInfo","alt","onClick","List","ul","ImageGallery","images","map","image","webformatURL","id","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","Btn","Button","onClickLoadMore","Overlay","div","ModalImg","Img","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","Status","ImageGalleryInfo","status","currentPage","showModal","toggleModal","setImgInfo","prevState","prevProps","prevName","nextName","prevPage","nextPage","searchMoreImages","pixabayAPI","total","dark","hits","catch","finally","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","style","margin","textAlign","fontSize","length","color","height","width","timeout","Section","Container","children","App","handleSearchForm","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.225924a7.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Component } from 'react';\r\n// import { ImSearch } from 'react-icons/im';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  SearchBar,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormLabel,\r\n  SearchFormInput,\r\n} from './Searchbar.styled';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.imageName.trim() === '') {\r\n      toast.error('Please, enter something!');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SearchBar>\r\n        <SearchForm onSubmit={this.handleSubmit}>\r\n          <SearchFormButton type=\"submit\">\r\n            <SearchFormLabel>\r\n              {/* <ImSearch style={{ marginRight: 8 }} /> */}\r\n            </SearchFormLabel>\r\n          </SearchFormButton>\r\n          <SearchFormInput\r\n            type=\"text\"\r\n            name=\"imageName\"\r\n            placeholder=\"Search images and photos\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            value={this.state.imageName}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </SearchForm>\r\n      </SearchBar>\r\n    );\r\n  }\r\n}\r\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  border-radius: 3px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport { Item, Image } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({\r\n  src,\r\n  largeImageURL,\r\n  tags = \"\",\r\n  onSetImgInfo\r\n}) => {\r\n    return (\r\n      <Item>\r\n        <Image\r\n          src={src}\r\n          alt={tags}\r\n          onClick={() => {\r\n          onSetImgInfo({ largeImageURL, tags });\r\n        }}/>\r\n\r\n     \r\n      </Item>\r\n    );\r\n\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    onSetImgInfo: PropTypes.func.isRequired,\r\n};\r\n  \r\nexport default ImageGalleryItem","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { List } from './ImageGallery.styled';\r\n\r\nexport default function ImageGallery({ images, onSetImgInfo }) {\r\n  return (\r\n    <List>\r\n      {images &&\r\n        images.map(image => {\r\n          return (\r\n            <ImageGalleryItem\r\n              src={image.webformatURL}\r\n              alt={image.tags}\r\n              largeImageURL={image.largeImageURL}\r\n              key={image.id}\r\n              onSetImgInfo={onSetImgInfo}\r\n            />\r\n          );\r\n        })}\r\n    </List>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","function fetchImage(name, page) {\n  const KEY = '18992166-123806360f211761da038f5eb';\n  const BASE_URL = 'https://pixabay.com/api/';\n\n  return fetch(\n    `${BASE_URL}?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Invalid request'));\n  });\n}\n\nconst api = {\n  fetchImage,\n};\n\nexport default api;\n","// * Стили компонента Buton (Load more)\nimport styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: 30px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport { Btn } from './ButtonLoad.styled';\r\n\r\nexport default function Button({ onClickLoadMore }) {\r\n  return (\r\n    <>\r\n      <Btn type=\"button\" onClick={onClickLoadMore}>\r\n        Load more\r\n      </Btn>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClickLoadMore: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalImg = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Img = styled.img``;\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Overlay, ModalImg, Img } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <Overlay onClick={this.handleOverlayClick}>\r\n        <ModalImg>\r\n          <Img src={src} alt={alt} />\r\n        </ModalImg>\r\n      </Overlay>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport pixabayAPI from '../../service/pixabay-api';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default class ImageGalleryInfo extends Component {\r\n  state = {\r\n    images: [],\r\n    status: Status.IDLE,\r\n    error: null,\r\n    currentPage: 1,\r\n    showModal: false,\r\n    largeImageURL: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    imageName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const prevPage = prevState.currentPage;\r\n    const nextPage = this.state.currentPage;\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({ images: [], currentPage: 1 });\r\n    }\r\n\r\n    if (prevName !== nextName || prevPage !== nextPage) {\r\n      this.searchMoreImages(nextName, nextPage);\r\n    }\r\n  }\r\n\r\n  searchMoreImages(nextName, nextPage) {\r\n    this.setState({ status: Status.PENDING });\r\n\r\n    pixabayAPI\r\n      .fetchImage(nextName, nextPage)\r\n      .then(images => {\r\n        if (images.total === 0) {\r\n          toast.dark('No images. Please try another query!');\r\n          this.setState({ status: Status.REJECTED });\r\n\r\n          return;\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images.hits],\r\n          status: Status.RESOLVED,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n      .finally(() => {\r\n        setTimeout(() => {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }, 500);\r\n      });\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  setImgInfo = ({ largeImageURL, tags }) => {\r\n    this.setState({ largeImageURL, tags });\r\n    this.toggleModal();\r\n  };\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      currentPage: prevState.currentPage + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { images, status, alt, largeImageURL, showModal  } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {status === Status.IDLE && (\r\n          <div\r\n            style={{\r\n              margin: '20px auto',\r\n              textAlign: 'center',\r\n              fontSize: '20px',\r\n            }}\r\n          >\r\n            Please, enter a query!\r\n          </div>\r\n        )}\r\n        {images.length > 0 && (\r\n          <>\r\n            <ImageGallery images={images} onSetImgInfo={this.setImgInfo} />\r\n            <Button onClickLoadMore={this.onClickLoadMore} />\r\n               {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\r\n        )}\r\n          </>\r\n        )}\r\n\r\n        {status === Status.PENDING && (\r\n          <div>\r\n            <Loader\r\n              type=\"Circles\"\r\n              color=\"#00BFFF\"\r\n              height={100}\r\n              width={100}\r\n              timeout={3000} //3 secs\r\n            />\r\n          </div>\r\n        )}\r\n        {status === Status.REJECTED && null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//     if (status === Status.IDLE) {\r\n//       return (\r\n//         <div\r\n//           style={{ margin: '20px auto', textAlign: 'center', fontSize: '20px' }}\r\n//         >\r\n//           Please, enter a query!\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     if (status === Status.PENDING) {\r\n//       return (\r\n//         <Loader\r\n//           type=\"Circles\"\r\n//           color=\"#00BFFF\"\r\n//           height={100}\r\n//           width={100}\r\n//           timeout={3000} //3 secs\r\n//         />\r\n//       );\r\n//     }\r\n\r\n//     if (status === Status.REJECTED) {\r\n//       return null;\r\n//     }\r\n\r\n//     if (status === Status.RESOLVED) {\r\n//       return (\r\n//         <div>\r\n//           <ImageGallery images={images} />\r\n//           <Button onClickLoadMore={this.onClickLoadMore} />\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  max-width: 100%;\n  /* display: flex;\n  flex-direction: column; */\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  padding: 15px 30px;\n  text-align: center;\n`;\n","import { Section } from './Container.styled';\r\n\r\nfunction Container({ children }) {\r\n  return <Section>{children}</Section>;\r\n}\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport ImageGalleryInfo from '../ImageGalleryInfo/ImageGalleryInfo';\r\nimport Container from '../Container/Container';\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleSearchForm = imageName => {\r\n    this.setState({ imageName });\r\n  };\r\n\r\n  render() {\r\n    const { imageName } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <Searchbar onSubmit={this.handleSearchForm} />\r\n        <ImageGalleryInfo\r\n          imageName={imageName}\r\n          currentPage={this.props.currentPage}\r\n        />\r\n\r\n        <ToastContainer autoClose={3000} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport App from './component/App//App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}